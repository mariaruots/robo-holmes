{"version":3,"sources":["react-auth0-spa.js","api/socket.js","components/Movement.js","components/Camera.js","components/Stream.js","components/FirstPage.js","components/NavBar.js","App.js","serviceWorker.js","utils/history.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","socket","openSocket","forward","emit","stop","left","right","reverse","moveup","movedown","Movement","className","id","onClick","Component","Camera","Stream","JSMpeg","VideoElement","hostname","FirstPage","NavBar","isAuthenticated","loginWithRedirect","logout","App","loading","Boolean","match","createBrowserHistory","ReactDOM","render","children","onRedirectCallback","initOptions","useState","setIsAuthenticated","user","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","useEffect","a","async","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","Provider","value","loginWithPopup","params","console","error","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","push","targetUrl","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eedeab89.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n","import openSocket from 'socket.io-client';\r\n\r\nconst socket = openSocket();\r\n\r\nfunction forward() {\r\n    socket.emit('forward', 'moving forward');\r\n    return false;\r\n}\r\n\r\nfunction stop() {\r\n    socket.emit('stop', 'stopping motors');\r\n    return false;\r\n}\r\n\r\nfunction reverse() {\r\n    socket.emit('reverse', 'moving reverse');\r\n    return false;\r\n}\r\n\r\nfunction right() {\r\n    socket.emit('right', 'moving right');\r\n    return false;\r\n}\r\n\r\nfunction left() {\r\n    socket.emit('left', 'moving left');\r\n    return false;\r\n}\r\n\r\nfunction moveup() {\r\n    socket.emit('moveup', '');\r\n    return false;\r\n}\r\n\r\nfunction movedown() {\r\n    socket.emit('movedown', '');\r\n    return false;\r\n}\r\n\r\nexport default {forward, stop, left, right, reverse, moveup, movedown};","import React, { Component } from 'react'\r\nimport socket from '../api/socket';\r\n\r\nexport default class Movement extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <i className=\"far fa-arrow-alt-circle-up\" id=\"forward\" onClick={socket.forward} ></i><br></br>\r\n                <i className=\"far fa-arrow-alt-circle-left\" id=\"left\" onClick ={socket.left}></i>\r\n                <i className=\"far fa-stop-circle\" id=\"stop\" onClick ={socket.stop}></i>\r\n                <i className=\"far fa-arrow-alt-circle-right\" id=\"right\" onClick ={socket.right}></i><br></br>\r\n                <i className=\"far fa-arrow-alt-circle-down\" id=\"reverse\" onClick ={socket.reverse}></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport socket from '../api/socket';\r\n\r\nexport default class Camera extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <i className=\"far fa-arrow-alt-circle-up\" id=\"up\" onClick={socket.moveup} ></i><br></br>\r\n                <i className=\"far fa-minus-square\" id=\"slow\" ></i>\r\n                <i className=\"far fa-lightbulb\" id=\"lights\" ></i>\r\n                <i className=\"far fa-plus-square\" id=\"fast\" ></i><br></br>\r\n                <i className=\"far fa-arrow-alt-circle-down\" id=\"down\" onClick={socket.movedown} ></i>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport JSMpeg from '@cycjimmy/jsmpeg-player';\r\n\r\nexport default class Stream extends Component {\r\n\r\n    componentDidMount() {\r\n        new JSMpeg.VideoElement('.videoWrapper', 'ws://'+document.location.hostname+':8082/');\r\n    }\r\n\r\n    render() {     \r\n        return (\r\n            <div className=\"videoWrapper\">\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../styles/FirstPage.css';\r\nimport Movement from './Movement';\r\nimport Camera from './Camera';\r\nimport Stream from './Stream';\r\n\r\nexport default class FirstPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Robo-Holmes</h1>\r\n                <Stream />\r\n                <div className=\"controls\">\r\n                    <div className=\"movement\">\r\n                        <Movement />\r\n                    </div>\r\n                    <div className=\"camera\">\r\n                        <Camera />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport FirstPage from \"./FirstPage\";\r\n\r\nconst NavBar = () => {\r\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated && (\r\n        <button onClick={() => loginWithRedirect({})}>Log in</button>\r\n      )}\r\n      {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\r\n      {isAuthenticated && (\r\n          <FirstPage />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport { useAuth0 } from \"./react-auth0-spa\";\r\n\r\nfunction App() {\r\n  const {loading } = useAuth0();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\nimport config from \"./auth_config.json\";\r\nimport history from \"./utils/history\";\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    redirect_uri={window.location.origin}\r\n    onRedirectCallback={onRedirectCallback}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}