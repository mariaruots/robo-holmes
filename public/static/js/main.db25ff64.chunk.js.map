{"version":3,"sources":["react-auth0-spa.js","components/Movement.js","components/Camera.js","components/Stream.js","components/FirstPage.js","components/NavBar.js","App.js","serviceWorker.js","utils/history.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","socket","openSocket","Movement","on","data","console","log","getElementById","addEventListener","forward","stop","reverse","right","left","emit","className","id","Component","Camera","Stream","FirstPage","NavBar","useContext","isAuthenticated","loginWithRedirect","logout","onClick","App","Boolean","hostname","match","createBrowserHistory","ReactDOM","render","children","onRedirectCallback","initOptions","useState","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","async","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","Provider","value","loginWithPopup","params","error","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","push","targetUrl","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db25ff64.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n","import React, { Component } from 'react'\r\n//import socketIOClient from \"socket.io-client\";\r\nimport openSocket from 'socket.io-client';\r\n\r\nconst socket = openSocket('http://localhost:3000');\r\nexport default class Movement extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n        //var socket = socketIOClient();\r\n\r\n        socket.on('socketToMe', function (data) {\r\n            console.log(data);\r\n        });\r\n\r\n        document.getElementById(\"forward\").addEventListener(\"click\", window.forward);\r\n        document.getElementById(\"stop\").addEventListener(\"click\", window.stop);\r\n        document.getElementById(\"reverse\").addEventListener(\"click\", window.reverse);\r\n        document.getElementById(\"right\").addEventListener(\"click\", window.right);\r\n        document.getElementById(\"left\").addEventListener(\"click\", window.left);\r\n    }\r\n\r\n    forward() {\r\n        window.socket.emit('forward', 'moving forward');\r\n        return false;\r\n    }\r\n\r\n    stop() {\r\n        window.socket.emit('stop', 'stopping motors');\r\n        return false;\r\n    }\r\n\r\n    reverse() {\r\n        window.socket.emit('reverse', 'moving reverse');\r\n        return false;\r\n    }\r\n\r\n    right() {\r\n        window.socket.emit('right', 'moving right');\r\n        return false;\r\n    }\r\n\r\n    left() {\r\n        window.socket.emit('left', 'moving left');\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        /*var socket = socketIOClient('http://localhost:3000');\r\n\r\n        socket.on('socketToMe', function (data) {\r\n            console.log(data);\r\n        });*/\r\n\r\n        /*document.getElementById(\"forward\").addEventListener(\"click\", forward);\r\n        document.getElementById(\"stop\").addEventListener(\"click\", stop);\r\n        document.getElementById(\"reverse\").addEventListener(\"click\", reverse);\r\n        document.getElementById(\"right\").addEventListener(\"click\", right);\r\n        document.getElementById(\"left\").addEventListener(\"click\", left);*/\r\n\r\n\r\n        /*function forward() {\r\n            socket.emit('forward', 'moving forward');\r\n            return false;\r\n        }\r\n\r\n        function stop() {\r\n            socket.emit('stop', 'stopping motors');\r\n            return false;\r\n        }\r\n\r\n        function reverse() {\r\n            socket.emit('reverse', 'moving reverse');\r\n            return false;\r\n        }\r\n\r\n        function right() {\r\n            socket.emit('right', 'moving right');\r\n            return false;\r\n        }\r\n\r\n        function left() {\r\n            socket.emit('left', 'moving left');\r\n            return false;\r\n        }*/\r\n\r\n        return (\r\n            <div>\r\n                <i className=\"far fa-arrow-alt-circle-up\" id=\"forward\" ></i><br></br>\r\n                <i className=\"far fa-arrow-alt-circle-left\" id=\"left\" ></i>\r\n                <i className=\"far fa-stop-circle\" id=\"stop\" ></i>\r\n                <i className=\"far fa-arrow-alt-circle-right\" id=\"right\" ></i><br></br>\r\n                <i className=\"far fa-arrow-alt-circle-down\" id=\"reverse\" ></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Camera extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <i className=\"far fa-arrow-alt-circle-up\" id=\"up\" ></i><br></br>\r\n                <i className=\"far fa-minus-square\" id=\"slow\" ></i>\r\n                <i className=\"far fa-lightbulb\" id=\"lights\" ></i>\r\n                <i className=\"far fa-plus-square\" id=\"fast\" ></i><br></br>\r\n                <i className=\"far fa-arrow-alt-circle-down\" id=\"down\" ></i>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Stream extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mockStream\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../styles/FirstPage.css';\r\nimport Movement from './Movement';\r\nimport Camera from './Camera';\r\nimport Stream from './Stream';\r\n\r\nexport default class FirstPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Robo-Holmes</h1>\r\n                <Stream />\r\n                <div className=\"controls\">\r\n                    <div className=\"movement\">\r\n                        <Movement />\r\n                    </div>\r\n                    <div className=\"camera\">\r\n                        <Camera />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport FirstPage from \"./FirstPage\";\r\n\r\nconst NavBar = () => {\r\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated && (\r\n        <button onClick={() => loginWithRedirect({})}>Log in</button>\r\n      )}\r\n      {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\r\n      {isAuthenticated && (\r\n          <FirstPage />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport NavBar from \"./components/NavBar\";\r\n//import { useAuth0 } from \"./react-auth0-spa\";\r\nimport FirstPage from './components/FirstPage';\r\n\r\nfunction App() {\r\n  //const {loading } = useAuth0();\r\n\r\n  //if (loading) {\r\n  //  return <div>Loading...</div>\r\n // }\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <NavBar />\r\n      </header>\r\n      <FirstPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\nimport config from \"./auth_config.json\";\r\nimport history from \"./utils/history\";\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    redirect_uri={window.location.origin}\r\n    onRedirectCallback={onRedirectCallback}\r\n  >\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}